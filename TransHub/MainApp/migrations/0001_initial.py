# Generated by Django 3.2.25 on 2024-04-15 07:08

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bus_number', models.CharField(max_length=250)),
                ('seats', models.FloatField(default=0, max_length=5)),
                ('status', models.CharField(choices=[('1', 'Active'), ('2', 'Inactive')], default=1, max_length=2)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('1', 'Active'), ('2', 'Inactive')], default=1, max_length=2)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=250)),
                ('status', models.CharField(choices=[('1', 'Active'), ('2', 'Inactive')], default=1, max_length=2)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseBill',
            fields=[
                ('billno', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100)),
                ('schedule', models.DateTimeField()),
                ('fare', models.FloatField()),
                ('status', models.CharField(choices=[('1', 'Active'), ('2', 'Cancelled')], default=1, max_length=2)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.bus')),
                ('depart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='depart_location', to='MainApp.location')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination', to='MainApp.location')),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('phone', models.CharField(max_length=12, unique=True)),
                ('address', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gstin', models.CharField(max_length=15, unique=True)),
                ('status', models.CharField(choices=[('1', 'Accept'), ('2', 'Pending'), ('3', 'Reject')], default='pending', max_length=20)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('total_capacity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('available_capacity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('contact_person_name', models.CharField(max_length=100)),
                ('contact_person_email', models.EmailField(max_length=254)),
                ('contact_person_phone', models.CharField(max_length=15)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('1', 'Active'), ('2', 'Inactive')], default='1', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(default='USER', max_length=15)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='WarehouseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('s', 'Small'), ('m', 'Medium'), ('l', 'Large')], max_length=1)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('capacity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('count', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StorageUserDup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productname', models.CharField(max_length=100, null=True)),
                ('quantity', models.PositiveBigIntegerField(null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_paid', models.CharField(choices=[('1', 'False'), ('2', 'True')], default='1', max_length=2)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.warehouse')),
                ('warehouse_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.warehousetype')),
            ],
        ),
        migrations.CreateModel(
            name='StorageMapDup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_seats_display', models.CharField(blank=True, max_length=100, null=True)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.warehouse')),
                ('warehouse_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.warehousetype')),
            ],
        ),
        migrations.CreateModel(
            name='StorageMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storageNumber', models.CharField(max_length=50)),
                ('storage_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.storageuserdup')),
                ('warehouse_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.warehousetype')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, null=True)),
                ('sku', models.CharField(max_length=50, unique=True)),
                ('category', models.CharField(choices=[('Toys', 'Toys'), ('KitchenItems', 'KitchenItems'), ('Stationary', 'Stationary')], max_length=200, null=True)),
                ('brand', models.CharField(choices=[('QuillCraft', 'QuillCraft'), ('CreativeCanvas', 'CreativeCanvas'), ('CalinaQuetient', 'CalinaQuetient'), ('GastronomeGoods', 'GastronomeGoods'), ('HotWheelsHaven', 'Hot Wheels Haven')], max_length=50, null=True)),
                ('costPrice', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('sellingPrice', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('quantity', models.PositiveBigIntegerField(null=True)),
                ('minStockLevel', models.PositiveIntegerField(null=True)),
                ('maxStockLevel', models.PositiveIntegerField(null=True)),
                ('reorderPoint', models.PositiveIntegerField(null=True)),
                ('unitOfMeasurement', models.CharField(max_length=50, null=True)),
                ('image', models.ImageField(null=True, upload_to='stock_images/')),
                ('description', models.TextField(blank=True, null=True)),
                ('dateAdded', models.DateField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='Seat_map',
            fields=[
                ('seat_number', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('booked_seat', models.BooleanField(default=False)),
                ('booked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.bus')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.schedule')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('perprice', models.IntegerField(default=1)),
                ('totalprice', models.IntegerField(default=1)),
                ('billno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchasebillno', to='MainApp.purchasebill')),
                ('stockname', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchaseitem', to='MainApp.stock')),
            ],
        ),
        migrations.AddField(
            model_name='purchasebill',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchasesupplier', to='MainApp.supplier'),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='bus',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.category'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passenger_name', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('email_id', models.EmailField(max_length=254, null=True, unique=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('total_price', models.CharField(blank=True, max_length=10, null=True)),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.schedule')),
                ('seatMap', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.seat_map')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
